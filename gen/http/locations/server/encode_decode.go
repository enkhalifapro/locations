// Code generated by goa v3.2.5, DO NOT EDIT.
//
// locations HTTP server encoders and decoders
//
// Command:
// $ goa gen locations/api/design

package server

import (
	"context"
	locations "locations/gen/locations"
	"net/http"

	goahttp "goa.design/goa/v3/http"
)

// EncodeNowResponse returns an encoder for responses returned by the locations
// now endpoint.
func EncodeNowResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res := v.(*locations.Location)
		enc := encoder(ctx, w)
		body := NewNowResponseBody(res)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// DecodeNowRequest returns a decoder for requests sent to the locations now
// endpoint.
func DecodeNowRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			xForwardedFor *string
		)
		xForwardedForRaw := r.Header.Get("X-Forwarded-For")
		if xForwardedForRaw != "" {
			xForwardedFor = &xForwardedForRaw
		}
		payload := NewNowPayload(xForwardedFor)

		return payload, nil
	}
}
