// Code generated by goa v3.2.5, DO NOT EDIT.
//
// locations endpoints
//
// Command:
// $ goa gen locations/api/design

package locations

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "locations" service endpoints.
type Endpoints struct {
	Now goa.Endpoint
}

// NewEndpoints wraps the methods of the "locations" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Now: NewNowEndpoint(s),
	}
}

// Use applies the given middleware to all the "locations" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Now = m(e.Now)
}

// NewNowEndpoint returns an endpoint function that calls the method "now" of
// service "locations".
func NewNowEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*NowPayload)
		return s.Now(ctx, p)
	}
}
